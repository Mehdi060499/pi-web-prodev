{% extends 'back.html.twig' %}
{% block title %}
    Calendar
{% endblock %}
{% block style %}
    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/core@4.1.0/main.min.css">
    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/daygrid@4.1.0/main.min.css">
    <link href="../assets/node_modules/morrisjs/morris.css" rel="stylesheet">
    <!-- Toaster Popup message CSS -->
    <link href="../assets/node_modules/toast-master/css/jquery.toast.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="../dist/css/style.min.css" rel="stylesheet">
    <!-- Dashboard 1 Page CSS -->
    <link href="../dist/css/pages/dashboard1.css" rel="stylesheet">
    <link href="../assets/node_modules/datatables.net-bs4/css/dataTables.bootstrap4.css">
    <link rel="stylesheet" type="text/css" href="../assets/node_modules/datatables.net-bs4/css/responsive.dataTables.min.css">
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
{% endblock %}
{% block ktiba %}
<div id="calendar-holder"></div>

<h2>Create Event</h2>
<form id="create-event-form">
    <label for="title">Title:</label>
    <input type="text" id="title" name="title" required>
    <br>
    <label for="start">Start:</label>
    <input type="datetime-local" id="start" name="start" required>
    <br>
    <label for="end">End:</label>
    <input type="datetime-local" id="end" name="end" required>
    <br>
    <button type="submit">Create Event</button>
</form>

<script src="https://unpkg.com/@fullcalendar/core@4.1.0/main.min.js"></script>
<script src="https://unpkg.com/@fullcalendar/interaction@4.1.0/main.min.js"></script>
<script src="https://unpkg.com/@fullcalendar/daygrid@4.1.0/main.min.js"></script>

<script type="text/javascript">
document.addEventListener('DOMContentLoaded', () => {
    const calendarEl = document.getElementById('calendar-holder');
    const eventsData = {{ events|raw }}; // Ensure eventsData is properly assigned

    const calendar = new FullCalendar.Calendar(calendarEl, {
        plugins: ['interaction', 'dayGrid'],
        initialView: 'dayGridMonth',
        height: 'auto',
        header: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,dayGridWeek,dayGridDay'
        },
        events: eventsData, // Use the events passed from controller
        eventClick: function(info) {
            const action = prompt('Enter "update" to update the event or "delete" to delete the event:');

            if (action === 'update') {
                const updatedTitle = prompt('Enter a new title for the event:', info.event.title);

                if (updatedTitle) {
                    // Update the event
                    const updatedEvent = {
                        id: info.event.id,
                        title: updatedTitle,
                        start: info.event.start,
                        end: info.event.end
                    };

                    fetch('/calender/events/' + info.event.id, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(updatedEvent)
                    })
                    .then(response => {
                        if (response.ok) {
                            // Update the event title on the FullCalendar display
                            info.event.setProp('title', updatedTitle);
                        } else {
                            console.error('Failed to update event:', response.statusText);
                        }
                    })
                    .catch(error => {
                        console.error('Error updating event:', error);
                    });
                }
            } else if (action === 'delete') {
                if (confirm("Are you sure you want to delete this event?")) {
                    // Delete the event
                    fetch('/calender/events/' + info.event.id, {
                        method: 'DELETE',
                    })
                    .then(response => {
                        if (response.ok) {
                            // Remove the event from the FullCalendar display
                            info.event.remove();
                        } else {
                            console.error('Failed to delete event:', response.statusText);
                        }
                    })
                    .catch(error => {
                        console.error('Error deleting event:', error);
                    });
                }
            } else {
                alert('Invalid action. Please enter "update" or "delete".');
            }
        }
    });

    calendar.render();

    console.log('FullCalendar initialized.');

    const createEventForm = document.getElementById('create-event-form');
    createEventForm.addEventListener('submit', (event) => {
        event.preventDefault();

        const title = document.getElementById('title').value;
        const start = document.getElementById('start').value;
        const end = document.getElementById('end').value;

        fetch('/calender/events', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title: title,
                start: start,
                end: end
            })
        })
        .then(response => response.json())
        .then(data => {
            calendar.addEvent({
                title: data.title,
                start: data.start,
                end: data.end
            });

            createEventForm.reset();
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    });
});
</script>
{% endblock %}
